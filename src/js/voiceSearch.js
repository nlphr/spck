const voiceBtn = document.getElementById("voice-btn");

function voiceSearch(searchInput) {
  document.addEventListener("DOMContentLoaded", () => {
    const voiceBtn = document.getElementById("voice-btn");
    if (!voiceBtn || !searchInput) return;

    if ("webkitSpeechRecognition" in window || "SpeechRecognition" in window) {
      const SpeechRecognition =
        window.SpeechRecognition || window.webkitSpeechRecognition;
      const recognition = new SpeechRecognition();

      recognition.lang = "vi-VN"; 
      recognition.interimResults = false;
      recognition.maxAlternatives = 1;

      let isListening = false;

      voiceBtn.addEventListener("click", () => {
        if (!isListening) {
          recognition.start();
          isListening = true;
          voiceBtn.textContent = "üéôÔ∏è ƒêang nghe (nh·∫•n ƒë·ªÉ d·ª´ng)";
          console.log("üîä Voice search: b·∫Øt ƒë·∫ßu nghe...");
        } else {
          recognition.stop();
          isListening = false;
          voiceBtn.textContent = "üé§";
          console.log("‚èπÔ∏è Voice search: ƒë√£ d·ª´ng nghe (ng∆∞·ªùi d√πng nh·∫•n n√∫t).");
        }
      });

      recognition.addEventListener("result", (event) => {
        const transcript = event.results[0][0].transcript;
        console.log("‚úÖ Nh·∫≠n d·∫°ng:", transcript);
        searchInput.value = transcript;
        searchInput.dispatchEvent(new Event("input"));
      });

      recognition.addEventListener("end", () => {
        if (isListening) {
          // N·∫øu API t·ª± end (kh√¥ng ph·∫£i do ng∆∞·ªùi d√πng nh·∫•n n√∫t), restart
          recognition.start();
        } else {
          voiceBtn.textContent = "üé§";
        }
      });

      recognition.addEventListener("error", (e) => {
        console.error("‚ùå L·ªói voice search:", e.error);
        isListening = false;
        voiceBtn.textContent = "üé§";
      });
    } else {
      console.warn("‚ö†Ô∏è Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ Web Speech API");
    }
  });
}